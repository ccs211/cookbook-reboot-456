exit
c
@done
exit
attributes[:done]  || false
attributes[:done]
attributes = {}
row[3] == "true"
row[3]
"true" == "true"
"false" == "true"
"false" == "falsefgdsg"
"false" == "false"
"true" == "true"
row[3]
c
row[3].class
row[3]
row
exit
article.search(".teaser-item__info-item--total-time").text.strip
article.search(".teaser-item__info-item--total-time").text
c
article.search(".teaser-item__info-item--total-time").text
article.search(".teaser-item__info-item--total-time").count
article
exit
index
exit
recipes.first.name
recipes.first.class
recipes.count
recipes
recipes.class
exit
Recipe.new(name, description)
description
name
Recipe.new(name
description = article.search(".field-item").text.strip
name = article.search("h3 a").text.strip
article.text
exit
require_relative "recipe"
description = article.search(".field-item").text.strip
name = article.search("h3 a").text.strip
article.search(".field-item").text.strip
article.search(".field-item").text
article.search(".field-item").class
article.search(".field-item").count
article.search(".field-item").text
article.search("h3 a").text.strip
article.search("h3 a").text
article.search("h3 a").count
article.search("h3 a")
article.text
article = page.search(".view-content article").first
page.search(".view-content article").count
page.search(".view-content").count
page.class
page = Nokogiri::HTML.parse(html_file)
html_file.class
html_file = open(url).read
url = BASE_URL + "/recipes?query=#{@query}"
url
html_file = open(url).read
url = BASE_URL + "search/recipes?query=#{@query}"
BASE_URL + "search/recipes?query=#{@query}"
exit
@view.display_recipes(recipes)
recipes.class
recipes = @cookbook.all
@cookbook.all
exit
Recipe.new(row.first, row.last)
Review.new(row.first, row.last)
row.last
row.first
row[0]
row
c
next
row.class
row
exit
arg.class
arg
exit
@recipes
recipe
recipe.class
